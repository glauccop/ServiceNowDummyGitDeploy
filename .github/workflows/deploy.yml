name: Git Dummy Pipeline para integrar com o ServiceNow

on:

  push:
    branches: [main]
  pull_request: 
    branches: [main]

  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Build
        run: echo "Compilando o Aplicativo"

  desenvolvimento:
    name: Desenvolvimento
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Dummy Deploy - desenvolvimento
        run: echo "Deploy em DEV concluído!"

  homologacao:
    name: Homologação
    runs-on: ubuntu-latest
    needs: desenvolvimento
    steps:
      - name: Dummy Deploy - desenvolvimento
        run: echo "Deploy em HOMOLOGAÇÃO concluído!"

changeApproval:
  name: ServiceNow Change Approval
  needs: homologação
  runs-on: ubuntu-latest

  steps:
    - name: ServiceNow DevOps Change Approval
      uses: ServiceNow/servicenow-devops-change@v6.0.0
      with:
        devops-integration-user-name: ${{ vars.SN_DEVOPS_USER }}
        devops-integration-user-password: ${{ secrets.SN_DEVOPS_PASSWORD }}
        ## devops-integration-token: ${{ secrets.SN_DEVOPS_INTEGRATION_TOKEN }}
        instance-url: ${{ vars.SN_INSTANCE_URL }}
        tool-id: ${{ vars.SN_ORCHESTRATION_TOOL_ID }}
        context-github: ${{ toJSON(github) }}
        job-name: 'ServiceNow Change Approval'
        change-request: '{"setCloseCode":"true","attributes":{"short_description":"DevOps Git ServiceNowDummyGitDeploy","description":"Automated Software Deployment.","assignment_group":"68fab70e47b81250bda7e49b506d43ac","implementation_plan":"Software update is tested and results can be found in Test Summaries Tab; When the change is approved the implementation happens automated by the CICD pipeline within the change planned start and end time window.","backout_plan":"When software fails in production, the previous software release will be re-deployed.","test_plan":"Testing if the software was successfully deployed"}}'
         # {
         #   "setCloseCode":"true",
         #    "attributes":{
         #     "short_description":"DevOps Git ServiceNowDummyGitDeploy",
         #     "description":"Aguardando aprovação no ServiceNow",
         #     "assignment_group":"68fab70e47b81250bda7e49b506d43ac",
         #     "implementation_plan":"Software update is testes and results can be found in Test Summaries Tabe; When the change is approved the implementation happens automated by the CICD pipeline with the change planned start and end time window",
         #     "backout_plan":"Restaurar versão anterior",
         #     "test_plan":"Testado em ambiente de homologação"
         #     }
         # }
        interval: '100'
        timeout: '3600'
        changeCreationTimeOut: '3600'
        abortOnChangeCreationFailure: true
        abortOnChangeStepTimeout: true
    - name: Output of Change Creation
      run: echo "change-request-number = ${{ steps.create.outputs.change-request-number }} and change-request-sys-id = ${{ steps.create.outputs.change-request-sys-id }} " >> $GITHUB_OUTPUT
       # deployment-gate: '{"environment":"deployment_gate","jobName":"Deploy"}'
        
deploy:
  name: 'Deploy'
  needs: changeApproval
  runs-on: ubuntu-latest
  
  steps:
   - name: Run deployment script
     run: echo Completed Deployment.

producao:
  name: Deploy para Produção
  needs: deploy
  runs-on: ubuntu-latest
  
  steps:
    - name: Executar deploy em produção
      run: echo "Deploy em PRODUÇÃO realizado com sucesso!"
